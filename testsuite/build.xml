<project name="sitemesh-testsuite" default="tests-build" basedir=".">

    <property name="test-results" value="test-results"/>

    <path id="classpath">
        <fileset dir="lib"/>
        <fileset dir="../lib"/>
        <fileset dir="../dist"/>
        <fileset dir="embedded/tomcat/lib"/>
    </path>

    <target name="sitemesh-build" description="Build SiteMesh jar">
        <ant dir=".." target="jar"/>
    </target>

    <target name="webapp-build" depends="sitemesh-build,tests-build" description="Build web-app .war file">
        <mkdir dir="dist/webapp/WEB-INF/classes"/>
        <javac srcdir="src/webapp/WEB-INF/src" destdir="dist/webapp/WEB-INF/classes" classpathref="classpath" source="1.3" target="1.3"/>
        <javac srcdir="src/java" destdir="dist/webapp/WEB-INF/classes" classpathref="classpath" includes="testsuite/i18n/EncodingFilter.java" debug="on" source="1.3" target="1.3"/>
        
        <copy todir="dist/webapp">
            <fileset dir="src/webapp"/>
        </copy>

        <copy todir="dist/webapp/WEB-INF/lib">
            <fileset dir="../dist">
                <include name="sitemesh-*.jar"/>
            </fileset>
            <fileset dir="../lib">
                <include name="commons-*.jar"/>
                <include name="velocity-*.jar"/>
                <include name="freemarker.jar"/>
            </fileset>
            <fileset dir="../src/etc/tld/">
                <include name="*.tld"/>
            </fileset>
        </copy>

        <touch file="dist/webapp/WEB-INF/web.xml"/> 
        <jar jarfile="dist/sitemesh-testsuite.war" basedir="dist/webapp"/>
    </target>

    <target name="dist" depends="webapp-build"/>

    <target name="tests-build" depends="sitemesh-build" description="Build test suite">
        <mkdir dir="tmp/tests"/>
        <javac srcdir="src/java" destdir="tmp/tests" classpathref="classpath" debug="on"/>

        <mkdir dir="dist"/>
        <jar jarfile="dist/sitemesh-testsuite.jar">
            <fileset dir="tmp/tests"/>
        </jar>
    </target>

    <target name="deploy" depends="tests-build, webapp-build" description="Deploy web-app to servers">
        <java classname="testsuite.deploy.DeployWebApps" classpathref="classpath" fork="yes" dir=".">
            <classpath>
                <fileset dir="dist"/>
            </classpath>
        </java>
    </target>

    <target name="test" depends="tests-build" description="Run acceptance tests on deployed web-app">
        <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpathref="classpath"/>
        <mkdir dir="${test-results}"/>
        <junit haltonfailure="no" fork="yes" forkmode="once" dir=".">
            <classpath>
                <fileset dir="lib"/>
                <fileset dir="dist"/>
                <fileset dir="../lib"/>
                <fileset dir="../dist"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
            <test todir="${test-results}" name="testsuite.sitemesh.SiteMeshTestSuite$OnAllServers"/>
        </junit>
    </target>

    <target name="test-embedded" depends="test-embedded-jetty, test-embedded-tomcat" description="Run acceptance tests using embedded jetty and tomcat server (needs JDK 1.5)"/>

    <target name="test-embedded-jetty" depends="tests-build, webapp-build" description="Run acceptance tests using embedded jetty server">
        <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpathref="classpath"/>
        <mkdir dir="${test-results}"/>
        <junit haltonfailure="no" fork="yes" forkmode="once" dir=".">
            <classpath>
                <fileset dir="lib">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="dist">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../lib">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../dist">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
            <test todir="${test-results}" name="testsuite.sitemesh.SiteMeshTestSuite$OnEmbeddedServer"/>
        </junit>
    </target>

    <target name="test-embedded-tomcat" depends="tests-build, webapp-build" description="Run acceptance tests using embedded tomcat server (needs JDK 1.5)">
        <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpathref="classpath"/>
        <mkdir dir="${test-results}"/>
        <junit haltonfailure="no" fork="yes" forkmode="once" dir=".">
            <classpath>
                <fileset dir="embedded/tomcat/lib">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="lib">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="dist">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../lib">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../dist">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
            <test todir="${test-results}" name="testsuite.sitemesh.SiteMeshTestSuite$OnEmbeddedTomcatServer"/>
        </junit>
    </target>

    <target name="report">
        <junitreport todir="${test-results}">
            <fileset dir="${test-results}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test-results}"/>
        </junitreport>
    </target>

    <target name="clean" description="Clean up all built files">
        <ant dir=".." target="clean"/>
        <delete dir="tmp"/>
        <delete dir="dist"/>
        <delete dir="${test-results}"/>
        <delete dir="embedded/tomcat/work"/>
        <delete file="results.html"/>
    </target>

</project>
